I"U<h3 id="linear-레이아웃의-개념과-orientation">Linear 레이아웃의 개념과 Orientation<br /></h3>

<p>‘LinearLayout’이란?<br /></p>

<p>LinearLayout은 포함된 자식 뷰를 ‘선형’으로 배치시키는 레이아웃이다. 선형으로 배치하기 때문에, ‘가로 혹은 ‘세로’방향 등 두가지 방법으로 배치할 수 있다.<br />
LinearLayout의 Orientation 속성값은 ‘none’, ‘horizontal’, ‘vertical’로 선택할 수 있다.<br /></p>

<p><strong><font color="Red">LinearLayout의 속성</font></strong><br />
① gravity, layout_gravity속성에 대해서 이해해보자.<br /></p>

<table>
  <tr>
    <td>속성</td>
    <td>설명</td>
  </tr>
  <tr>
    <td>gravity</td>
    <td>객체가 자신의 경계 내에서 X축과 Y축의 내용을 배치하는 방법을 지정한다. 설정한 값은 단일 행이나 열 내의 모든 자식 뷰의 가로 및 세로 정렬에 영향을 준다.</td>
  </tr>
  <tr>
    <td>layout_gravity</td>
    <td>View 자신의 위치를 부모 뷰를 기준으로 정렬하는 속성이다. 구성 요소를 셀 그룹에 배치하는 방법을 지정한다. 기본값은 'LEFT | BASELINE'이다.</td>
  </tr>
</table>
<p><br />
→ ‘Margin’과 ‘Padding’, 이 두가지 요소는 비슷하면서도 서로 달라 자칫 헷갈리기 쉬우니 여기서 개념을 확실히 잡아 두는 것이 중요하다.<br />
‘배치기준(center, left, right)’이 먼저 적용이 되고, 그 적용된 기준선에 대해 ‘margin값’이 적용된다는 것을 알 수 있다.<br /></p>

<p><strong>Margin과 Padding</strong><br /></p>

<table>
  <tr>
    <td>속성</td>
    <td>설명</td>
  </tr>
  <tr>
    <td>layout_margin(외부 여백)</td>
    <td>뷰의 왼쪽, 위쪽, 오른쪽 및 아래쪽에 추가 공간을 지정한다.</td>
  </tr>
  <tr>
    <td>padding(내부 여백)</td>
    <td>왼쪽, 위쪽, 오른쪽 및 아래쪽 가장자리의 padding을 픽셀 단위로 설정한다. padding은 view의 가장자리와 view의 내용 사이의 간격을 지정한다.</td>
  </tr>
</table>
<p><br />
‘Padding’속성은 Marginㄹ과 달리 View 자기 자신의 영역이 움직이는 것이 아니다. 대신 View가 Drawing하는 내부 컨텐츠가 View 기준선으로부터의 여백을 결정한다.<br />
※’Padding’은 View내부의 content가 View내부의 기준선으로부터의 여백을 결정하는 것이고, ‘Margin’은 자식 뷰(Child View)가 부모 뷰(Parent View)로부터의 상대위치를 결정짓는다.＜br＞</p>

<p>② ‘ViewGroup이란?’<br /></p>

<p>ViewGroup은 View를 상속받으면서 특별히 여러 개의 구성 요소들을 포함하는 View이다. ViewGroup은 여러 개의 View들을 자식 뷰(Child View)로 가지면서 View의 위치를 조정하고 그룹화하여 관리할 수 있다. ViewGroup에 포함되어 있는 ‘View’를 가르켜 ‘자식 뷰(Child View)’라고 하고, ViewGroup을 ‘부모 뷰(Parent View)’라고 한다.<br /></p>

<p>ViewGroup은 View를 Group형태로 포함시킬 수 있는 클래스의 추상화된 개념으로, 실제로 사용되는 것이 ViewGroup를 상속받은 ‘Layout’이다.<br />
‘Layout’은 포함된 View를 배치할 수 있는 클래스이다.<br /></p>

<h3 id="전체적인-학습내용을-복습한다">전체적인 학습내용을 복습한다.<br /></h3>
<ol>
  <li>View는 안드로이드의 UI 요소 중 가장 기본이 되는 요소이다.<br /></li>
  <li>ViewGroup은 다른 여러 View를 포함시킬 수 있는 특별한 View이다. ViewGroup을 사용하면 View를 그룹화하여 관리할 수 있다.<br /></li>
  <li>레이아웃은 ViewGroup의 실제 구현 클래스이며 자식 뷰를 어떻게 배치할지 결정한다. 자주 사용하는 레이아웃에는 LinearLayout, RelativeLayout, ConstraintLayout등이 있다.<br /></li>
</ol>
:ET