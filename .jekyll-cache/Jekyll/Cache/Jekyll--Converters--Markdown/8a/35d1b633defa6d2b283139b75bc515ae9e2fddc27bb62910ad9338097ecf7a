I"m<h2 id="anatomy-of-a-flutter-app-">Anatomy of a Flutter App !</h2>

<p>이번 Posting에서는 Flutter App구성을 해부해볼 것이다.<br />
앞서 업데이트한 포스팅에서 알 수 있듯 Flutter는 <strong><font color="Red">"레고 블럭처럼 위젯을 가져다가 화면에 올려주면 된다."</font></strong>컨셉으로 매우 간편하게 앱을 작성할 수 있다.<br /></p>

<p><img src="/images/flutter/2020-04-21/2020-04-21 flutter widgets anatomy.png" alt="blog capture" title="capture img" /><br /></p>

<p><strong><font color="Blue">우선 Flutter의 특징에 대해서 알아보자.</font></strong><br />
<strong>① Flutter는 다양한 비율과 해상도에 맞게 레이아웃을 만들 수 있다. </strong><br />
   개발자가 레이아웃을 만들때, screen과 device의 제약을 두지 않고 만들 수 있다는 의미이다.<br /></p>

<p>→ 이것이 가능한 이유는 Flutter는<strong><font color="Red">"Based on simple blank window"</font></strong>로 모든 단말기에 단순 빈 윈도우 화면을 요청하고 그 위에 <strong><font color="Red">그림을 그리듯 위젯을 그린다.</font></strong> <br />
   이처럼 Flutter는 빈 화면위에 간단하게 모든 widget을 그리기때문에 Layout을 작성함에 있어 매우 강력하다.(Paint function)<br /></p>

<p><img src="/images/flutter/2020-04-21/2020-04-21 flutter screen image.png" alt="blog capture" title="capture img" /><br /></p>

<p>② 두번째 Flutter의 강력한 기능은 <strong><font color="Red">"레고처럼 Piece by piece"로 위젯들을 연결시켜 어플을 만들 수 있다는 것이다.</font></strong><br /></p>

<p><img src="/images/flutter/2020-04-21/2020-04-21 flutter widget capture.png" alt="blog capture" title="capture img" /><br /></p>

<p>③ 세번째로 왜 Flutter여야 하는가? 인데 이것은 <strong><font color="Red">"One codebase to rule them all"</font></strong>에 그 의미가 있다. 하나의 코드 작성으로 <font color="Red">모바일(Android, iOS), Web 어플리케이션, Desktop 어플리케이션</font>을 모두 작성할 수 있기 때문이다.<br />
이러한 Web design concept이 flutter에 도입이 되었다.<br />
<img src="/images/flutter/2020-04-21/2020-04-21 flutter huge advantage.png" alt="blog capture" title="capture img" /><br /></p>

<p>④ <strong><font color="Red">Flutter는 "Hot Reload" 기능을 지원한다.</font></strong><br />
  기존의 App개발에서는 Running and Compiling을 해야지만 app의 레이아웃의 변경사항을 확인할 수 있었지만, Flutter는 레이아웃의 변경사항이 레이아웃상에 바로 보여진다.<br /></p>

<p>⑤ iOS에서는 세부 클래스의 정보들이 숨겨져있지만, <strong><font color="Red">안드로이드처럼 Flutter는 상속되어있는 클래스와 메소드의 관계를 모두 공개하고 있다.<br /></font></strong></p>
:ET